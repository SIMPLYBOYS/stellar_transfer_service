    The files belonging to this database system will be owned by user "postgres".,
This user must also own the server process.,
,
The database cluster will be initialized with locale "en_US.utf8".,
The default database encoding has accordingly been set to "UTF8".,
The default text search configuration will be set to "english".,
,
Data page checksums are disabled.,
,
fixing permissions on existing directory /var/lib/postgresql/data ... ok,
creating subdirectories ... ok,
selecting default max_connections ... 100,
selecting default shared_buffers ... 128MB,
selecting default timezone ... Etc/UTC,
selecting dynamic shared memory implementation ... posix,
creating configuration files ... ok,
running bootstrap script ... ok,
performing post-bootstrap initialization ... ok,
,
WARNING: enabling "trust" authentication for local connections,
You can change this by editing pg_hba.conf or using the option -A, or,
--auth-local and --auth-host, the next time you run initdb.,
syncing data to disk ... ok,
,
Success. You can now start the database server using:,
,
    pg_ctl -D /var/lib/postgresql/data -l logfile start,
,
waiting for server to start....2019-11-14 06:50:54.064 UTC [43] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432",
2019-11-14 06:50:54.141 UTC [44] LOG:  database system was shut down at 2019-11-14 06:50:51 UTC,
2019-11-14 06:50:54.171 UTC [43] LOG:  database system is ready to accept connections,
 done,
server started,
,
/usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/20-create_db.sh,
Creating database: book_store,
CREATE DATABASE,
Creating schema...,
SET statement_timeout = 0;,
SET,
SET lock_timeout = 0;,
SET,
SET idle_in_transaction_session_timeout = 0;,
SET,
SET client_encoding = 'UTF8';,
SET,
SET standard_conforming_strings = on;,
SET,
SELECT pg_catalog.set_config('search_path', '', false);,
 set_config ,
------------,
 ,
(1 row),
,
SET check_function_bodies = false;,
SET,
SET xmloption = content;,
SET,
SET client_min_messages = warning;,
SET,
SET row_security = off;,
SET,
SET default_tablespace = '';,
SET,
SET default_with_oids = false;,
SET,,
 ,
CREATE TABLE public.books (,
  id integer NOT NULL,,
  created_at timestamp with time zone,,
  updated_at timestamp with time zone,,
  deleted_at timestamp with time zone,,
  title text,,
  cover_url text,,
  url text,,
  alt text,
);,
CREATE TABLE,
ALTER TABLE public.books OWNER TO postgres;,
ALTER TABLE,
CREATE SEQUENCE public.books_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;,
CREATE SEQUENCE,
ALTER TABLE public.books_id_seq OWNER TO postgres;,
ALTER TABLE,
ALTER SEQUENCE public.books_id_seq OWNED BY public.books.id;,
ALTER SEQUENCE,
-- post,
CREATE TABLE public.posts (,
  id integer NOT NULL,,
  created_at timestamp with time zone,,
  updated_at timestamp with time zone,,
  deleted_at timestamp with time zone,,
  title text,,
  text text,,
  author text,,
  next_post_id integer,,
  previous_post_id integer,,
  posted_on timestamp with time zone,
);,
CREATE TABLE,
ALTER TABLE public.posts OWNER TO postgres;,
ALTER TABLE,
CREATE SEQUENCE public.posts_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;,
CREATE SEQUENCE,
ALTER TABLE public.posts_id_seq OWNER TO postgres;,
ALTER TABLE,
ALTER SEQUENCE public.posts_id_seq OWNED BY public.posts.id;,
ALTER SEQUENCE,
-- project,
CREATE TABLE public.projects (,
  id integer NOT NULL,,
  created_at timestamp with time zone,,
  updated_at timestamp with time zone,,
  deleted_at timestamp with time zone,,
  name text,,
  thumbnail_url text,,
  url text,,
  description text,
);,
CREATE TABLE,
ALTER TABLE public.projects OWNER TO postgres;,
ALTER TABLE,
CREATE SEQUENCE public.projects_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;,
CREATE SEQUENCE,
ALTER TABLE public.projects_id_seq OWNER TO postgres;,
ALTER TABLE,
ALTER SEQUENCE public.projects_id_seq OWNED BY public.projects.id;,
ALTER SEQUENCE,
-- sections,
CREATE TABLE public.sections (,
  id integer NOT NULL,,
  created_at timestamp with time zone,,
  updated_at timestamp with time zone,,
  deleted_at timestamp with time zone,,
  post_id integer,,
  name text,
);,
CREATE TABLE,
ALTER TABLE public.sections OWNER TO postgres;,
ALTER TABLE,
CREATE SEQUENCE public.sections_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;,
CREATE SEQUENCE,
ALTER TABLE public.sections_id_seq OWNER TO postgres;,
ALTER TABLE,
ALTER SEQUENCE public.sections_id_seq OWNED BY public.sections.id;,
ALTER SEQUENCE,
-- tags,
EATE TABLE public.tags (,
  id integer NOT NULL,,
  created_at timestamp with time zone,,
  updated_at timestamp with time zone,,
  deleted_at timestamp with time zone,,
  post_id integer,,
  project_id integer,,
  name text,
);,
CREATE TABLE,
ALTER TABLE public.tags OWNER TO postgres;,
ALTER TABLE,
CREATE SEQUENCE public.tags_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;,
CREATE SEQUENCE,
ALTER TABLE public.tags_id_seq OWNER TO postgres;,
ALTER TABLE,
ALTER SEQUENCE public.tags_id_seq OWNED BY public.tags.id;,
ALTER SEQUENCE,
ALTER TABLE ONLY public.books ALTER COLUMN id SET DEFAULT nextval('public.books_id_seq'::regclass);,
ALTER TABLE,
ALTER TABLE ONLY public.posts ALTER COLUMN id SET DEFAULT nextval('public.posts_id_seq'::regclass);,
ALTER TABLE,
ALTER TABLE ONLY public.projects ALTER COLUMN id SET DEFAULT nextval('public.projects_id_seq'::regclass);,
ALTER TABLE,
ALTER TABLE ONLY public.sections ALTER COLUMN id SET DEFAULT nextval('public.sections_id_seq'::regclass);,
ALTER TABLE,
ALTER TABLE ONLY public.tags ALTER COLUMN id SET DEFAULT nextval('public.tags_id_seq'::regclass);,
ALTER TABLE,
ALTER TABLE ONLY public.books,
    ADD CONSTRAINT books_pkey PRIMARY KEY (id);,
ALTER TABLE,
ALTER TABLE ONLY public.posts,
    ADD CONSTRAINT posts_pkey PRIMARY KEY (id);,
ALTER TABLE,
ALTER TABLE ONLY public.projects,
    ADD CONSTRAINT projects_pkey PRIMARY KEY (id);,
ALTER TABLE,
ALTER TABLE ONLY public.sections,
    ADD CONSTRAINT sections_pkey PRIMARY KEY (id);,
ALTER TABLE,
ALTER TABLE ONLY public.tags,
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);,
ALTER TABLE,
ALTER TABLE ONLY public.posts,
    ADD CONSTRAINT posts_next_post_id_fkey FOREIGN KEY (next_post_id) REFERENCES public.posts(id) ON DELETE CASCADE;,
ALTER TABLE,
ALTER TABLE ONLY public.posts,
    ADD CONSTRAINT posts_previous_post_id_fkey FOREIGN KEY (previous_post_id) REFERENCES public.posts(id) ON DELETE CASCADE;,
ALTER TABLE,
ALTER TABLE ONLY public.sections,
    ADD CONSTRAINT sections_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id) ON DELETE CASCADE;,
ALTER TABLE,
ALTER TABLE ONLY public.tags,
    ADD CONSTRAINT tags_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id) ON DELETE CASCADE;,
ALTER TABLE,
ALTER TABLE ONLY public.tags,
    ADD CONSTRAINT tags_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id) ON DELETE CASCADE;,
ALTER TABLE,
-- Retrieval steps:,
--,
-- Remove old volumes,
-- docker volume prune,
-- Add automigrate to Gin start-up,
-- Build container (make container),
--,
-- docker-compose up,
-- docker exec -it <blog_db_id> /bin/bash,
-- pg_dump -s blog -Upostgres | sed -e '/^--/d',
--,
-- Don't forget to remove automigrate,
Populating database...,
INSERT INTO posts (title, text, author, posted_on, next_post_id, previous_post_id) VALUES ('First Blog Post', 'This is blog about something.', 'Martin', '2018-08-24 14:00:00', null, null);,
INSERT 0 1,
INSERT INTO posts (title, text, author, posted_on, next_post_id, previous_post_id) VALUES ('Second Blog Post', 'This is blog about something else...', 'Martin', '2019-02-24 13:00:00', null, null);,
INSERT 0 1,
INSERT INTO posts (title, text, author, posted_on, next_post_id, previous_post_id) VALUES ('3rd Blog Post', 'Another dummy content', 'Martin', '2019-05-30 19:00:00', null, null);,
INSERT 0 1,
UPDATE posts SET next_post_id = 2, previous_post_id = null WHERE id = 1;,
UPDATE 1,
UPDATE posts SET next_post_id = 3, previous_post_id = 1  WHERE id = 2;,
UPDATE 1,
UPDATE posts SET next_post_id = null, previous_post_id = 2 WHERE id = 3;,
UPDATE 1,
INSERT INTO sections (name, post_id) VALUES ('Title', 1);,
INSERT 0 1,
INSERT INTO sections (name, post_id) VALUES ('Subsection', 1);,
INSERT 0 1,
INSERT INTO sections (name, post_id) VALUES ('Intro', 2);,
INSERT 0 1,
INSERT INTO sections (name, post_id) VALUES ('Subsection', 2);,
INSERT 0 1,
INSERT INTO sections (name, post_id) VALUES ('Subsection 2', 2);,
INSERT 0 1,
INSERT INTO sections (name, post_id) VALUES ('Subsection 3', 2);,
INSERT 0 1,
INSERT INTO sections (name, post_id) VALUES ('Intro', 3);,
INSERT 0 1,
INSERT INTO sections (name, post_id) VALUES ('First Section', 3);,
INSERT 0 1,
INSERT INTO projects (name, thumbnail_url, url, description) VALUES ('IoT Cloud', 'https://via.placeholder.com/150', 'https://github.com/MartinHeinz/IoT-Cloud', 'Cloud framework for IoT (Internet of Things), which focuses on security and privacy of its users, their devices and data');,
INSERT 0 1,
INSERT INTO projects (name, thumbnail_url, url, description) VALUES ('Blog & Personal Website', 'https://via.placeholder.com/150', 'https://github.com/MartinHeinz/blog-backend', 'This website. Goal of this project was to learn Go and Vue.js and as a byproduct I created personal website and blog.');,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Python', 1, null);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Python', 2, null);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Crypto', 1, null);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Golang', 1, null);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Vue', 3, null);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Python', null, 1);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Cryptography', null, 1);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Privacy', null, 1);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('IoT', null, 1);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Vue', null, 2);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Golang', null, 2);,
INSERT 0 1,
INSERT INTO tags (name, post_id, project_id) VALUES ('Docker', null, 2);,
INSERT 0 1,
INSERT INTO books (title, cover_url, url, alt) VALUES ('The Go Programming Language', 'https://www.gopl.io/cover.png', 'https://www.gopl.io/', 'The Go Programming Language');,
INSERT 0 1,
INSERT INTO books (title, cover_url, url, alt) VALUES ('Clean Code', 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1436202607i/3735293._SX318_.jpg', 'https://www.goodreads.com/book/show/3735293-clean-code', 'Clean Code: A Handbook of Agile Software Craftsmanship');,
INSERT 0 1,
INSERT INTO books (title, cover_url, url, alt) VALUES ('Software Craftsmanship', 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1370897661i/18054154.jpg', 'https://www.goodreads.com/book/show/18054154-software-craftsmanship', 'The Software Craftsman: Professionalism, Pragmatism, Pride');,
INSERT 0 1,
INSERT INTO books (title, cover_url, url, alt) VALUES ('Extreme Programming Explained', 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1386925310i/67833.jpg', 'https://www.goodreads.com/book/show/67833.Extreme_Programming_Explained', 'Extreme Programming Explained: Embrace Change (The XP Series)');,
INSERT 0 1,
,
waiting for server to shut down...2019-11-14 06:50:57.303 UTC [43] LOG:  received fast shutdown request,
2019-11-14 06:50:57.305 UTC [43] LOG:  aborting any active transactions,
.2019-11-14 06:50:57.311 UTC [43] LOG:  background worker "logical replication launcher" (PID 50) exited with exit code 1,
2019-11-14 06:50:57.312 UTC [45] LOG:  shutting down,
2019-11-14 06:50:57.463 UTC [43] LOG:  database system is shut down,
 done,
server stopped,
,
PostgreSQL init process complete; ready for start up.,
,
2019-11-14 06:50:57.549 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432,
2019-11-14 06:50:57.549 UTC [1] LOG:  listening on IPv6 address "::", port 5432,
2019-11-14 06:50:57.554 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432",
2019-11-14 06:50:57.641 UTC [80] LOG:  database system was shut down at 2019-11-14 06:50:57 UTC,
2019-11-14 06:50:57.669 UTC [1] LOG:  database system is ready to accept connections,